version: "3.10"

volumes:
  pgdata:
  static:
  media:

services:

  django_pit:
    build:
      context: .
    ports:
      - '8000:8000'
    container_name: django_pit
    env_file:
      - docker/env/.env.prod
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/media
    depends_on:
      - postgres_pit
      - redis_pit
#      - elasticsearch
    command: sh -c "python manage.py collectstatic --no-input &&
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    gunicorn --workers=4 --reload --max-requests=1000 sportpit.wsgi -b 0.0.0.0:8000"

  nginx_pit:
    container_name: nginx_pit
    working_dir: /app
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/app/static
      - media:/app/media
      - ./docker/nginx/prod/:/etc/nginx/conf.d:ro
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/certbot/www:/var/www/certbot:ro
#    links:
#      - django_pit
    depends_on:
      - django_pit

  postgres_pit:
    image: postgres:alpine
    container_name: postgres_pit
    restart: always
    env_file:
      - docker/env/.env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data/

  redis_pit:
    image: redis:alpine
    container_name: redis_pit
    env_file:
      - docker/env/.env.prod
    expose:
      - 6379
    volumes:
      - ./docker/redis/data:/data

  certbot_pit:
      image: certbot/certbot
      container_name: certbot_pit
      volumes:
          - ./docker/certbot/conf:/etc/letsencrypt:rw
          - ./docker/certbot/www:/var/www/certbot:rw
      # command: certonly --webroot --webroot-path=/var/www/certbot/ --email kalaytanov93@gmail.com --agree-tos --no-eff-email -d project-pit.ru -d www.project-pit.ru
      depends_on:
        - nginx_pit

#  elasticsearch:
#    container_name: elasticsearch
#    image: elasticsearch:7.17.19
#    environment:
#      - discovery.type=single-node
#      - cluster.name=es-docker
#      - node.name=node1
#      - bootstrap.memory_lock=true
##      - "ES_JAVA_OPTS=-Xmx512m -Xms512"
##    deploy:
##      resources:
##        limits:
##          memory: 2G
#    restart: always
#    ports:
#      - "9200:9200"
#    volumes:
#      - ./docker/elasticsearch/:/elastic