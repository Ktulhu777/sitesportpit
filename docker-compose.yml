version: "3.10"

volumes:
  pgdata_project2:
  static_project2:
  media_project2:

services:
  django:
    build:
      context: .
    ports:
      - '8001:8000'
    container_name: django_project2
    env_file:
      - docker/env/.env.prod
    volumes:
      - ./:/app
      - static_project2:/app/static
      - media_project2:/app/media
    depends_on:
      - postgres_project2
      - redis_project2
    command: sh -c "python manage.py collectstatic --no-input &&
                    python manage.py makemigrations &&
                    python manage.py migrate && 
                    gunicorn --workers=4 --reload --max-requests=1000 sportpit.wsgi -b 0.0.0.0:8000"

  nginx:
    container_name: nginx_project2
    working_dir: /app
    image: nginx:stable-alpine
    restart: always
    ports:
      - "81:80"
      - "444:443"
    volumes:
      - static_project2:/app/static
      - media_project2:/app/media
      - ./docker/nginx/prod/:/etc/nginx/conf.d:ro
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/certbot/www:/var/www/certbot:ro
    depends_on:
      - django

  postgres_project2:
    image: postgres:alpine
    container_name: postgres_project2
    restart: always
    env_file:
      - docker/env/.env.prod
    volumes:
      - pgdata_project2:/var/lib/postgresql/data/

  redis_project2:
    image: redis:alpine
    container_name: redis_project2
    env_file:
      - docker/env/.env.prod
    expose:
      - 6379
    volumes:
      - ./docker/redis/data:/data

  certbot:
    image: certbot/certbot
    container_name: certbot_project2
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt:rw
      - ./docker/certbot/www:/var/www/certbot:rw
    depends_on:
      - nginx
