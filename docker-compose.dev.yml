version: '3.10'

volumes:
  pgdata:
  static:
  media:

services:

  django:
    build:
      context: .
    ports:
      - '8000:8000'
    container_name: django
    env_file:
      - docker/env/.env.dev
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/media
    depends_on:
      - elasticsearch
    command: sh -c "python manage.py collectstatic --no-input &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"

  nginx:
    container_name: nginx
    working_dir: /app
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - static:/app/static
      - media:/app/media
      - ./docker/nginx/dev/:/etc/nginx/conf.d:ro
    links:
      - django
    depends_on:
      - django

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.17.19
    environment:
      - discovery.type=single-node
      - cluster.name=es-docker
      - node.name=node1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    deploy:
      resources:
        limits:
          memory: 8G # Limited the amount of RAM
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./docker/elasticsearch/:/elastic # Volume for data storage



#  celery-worker:
#    build: .
#    container_name: celery-worker
#    restart: always
#    env_file:
#      - docker/env/.env.dev
#    volumes:
#      - ./:/app
#      - media:/app/media
#    command: celery -A backend worker --loglevel=info --logfile=./docker/logs/celery-worker.log
#    depends_on:
#      - redis
#
#  celery-beat:
#      build: .
#      container_name: celery-beat
#      env_file:
#          - docker/env/.env.dev
#      depends_on:
#          - redis
#      command: celery -A backend beat --loglevel=info --logfile=./docker/logs/celery-beat.log
#      volumes:
#          - media:/app/media
#          - ./:/app